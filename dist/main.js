/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./src/style.css":
/*!*************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/style.css ***!
  \*************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/getUrl.js */ \"./node_modules/css-loader/dist/runtime/getUrl.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);\n// Imports\n\n\n\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(/* asset import */ __webpack_require__(/*! ./ComingSoon-Regular.ttf */ \"./src/ComingSoon-Regular.ttf\"), __webpack_require__.b);\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `body {\n    margin: 0;\n    padding: 0;\n    border: 0;\n}\n\n@font-face {\n    font-family: 'ComingSoon';\n    src: url(${___CSS_LOADER_URL_REPLACEMENT_0___});\n    font-style: normal;\n}\n\n/* STYLING FOR DATE INPUT */\n.dateInputContainer input {\n    box-sizing: border-box;\n    padding: .75rem;\n    position: relative;\n}\n\ninput[type=\"date\"]::-webkit-calendar-picker-indicator {\n    background: transparent;\n    bottom: 0;\n    color: transparent;\n    cursor: pointer;\n    height: auto;\n    left: 0;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: auto;\n}\n\n/* SIDEBAR STYLING */\n\n.sidebar-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: 100%;\n    position: fixed;\n    z-index: 1;\n    top: 0;\n    left: 0;\n    width: 230px;\n    background-color: #60a5fa; /* #400 from the blue color palette  */\n    box-shadow: 0px 2px 3px 0px black;\n}\n\n.sidebar-header {\n    font-family: 'ComingSoon';\n    text-shadow: 0px 0px 15px #6176ff;\n    color: #ffffff;\n    word-spacing: 10px;\n    letter-spacing: 6px;\n    font-size: 2.7em;\n    background-color: #3b82f6;\n    width: 200vw;\n    height: auto;\n    text-align: center;\n    padding-top: 12px;\n    margin: 0 0 0 50px;\n    padding-bottom: 10px;\n    text-decoration: underline;\n}\n\n.sidebar-list {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    gap: 20px;\n    list-style: none;\n    padding: 0;\n}\n\n.sidebar-list li {\n    width: 100%;\n    list-style: none;\n    padding: 0;\n}\n\n\n.sidebar-svg {\n    width: 20%;\n    height: 40px;\n    filter: invert(100%) sepia(0%) saturate(7500%) hue-rotate(110deg) brightness(98%) contrast(108%);\n   \n    /* \n    above changes the color of the SVG, created using:\n    https://isotropic.co/tool/hex-color-to-css-filter/ \n    */\n\n    pointer-events: none;\n}\n\nspan {\n    pointer-events: none;\n}\n\n.sidebar-list li button {\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    gap: 5px;\n    cursor: pointer;\n    width: 100%;\n    height: 60px;\n    background: transparent;\n    color: white;\n    font-family: 'ComingSoon';\n    letter-spacing: 1px;\n    border: none;\n    font-size: 1.2em;\n    font-weight: 600;\n}\n\n.sidebar-list-click {\n    background-color: white !important;\n    color: #1e40af !important;\n    box-shadow: 2px 0px 0px 2px white !important;\n}\n\n.sidebar-list-click img {\n    filter: invert(25%) sepia(31%) saturate(4712%) hue-rotate(213deg) brightness(82%) contrast(96%) !important;\n}\n\n.sidebar-list-click:hover {\n    box-shadow: 2px 0px 0px 2px white !important;\n    border: none !important;\n    text-shadow: none !important;\n    background-color: white !important;\n}\n\n.sidebar-list button:hover {\n    background-color: #3b82f6;\n    text-shadow: 0px 0px 10px black;\n    border: 1px solid #0000001f;\n    box-shadow: -1px -1px 8px 0px black;\n    /* box-shadow: inset 0px 1px 3px 0px black; */\n}\n\n.sidebar-list button:active{\n    background-color: #3b82f6;\n    box-shadow: inset 0px 1px 3px 0px black;\n    text-shadow: none;\n}\n\n.futureTasks span {\n    letter-spacing: 1px;\n    word-spacing: 3px;\n}\n\n.newTask {\n    margin-top: 40px;\n    letter-spacing: 2px !important;\n}\n\n.newTask span {\n    font-size: 1.7em;\n    height: 40px;\n}\n\n.newTask:hover {\n    color: #00ff58;\n}\n\n.newTask:hover img {\n    filter: invert(77%) sepia(22%) saturate(6275%) hue-rotate(87deg) brightness(104%) contrast(112%);\n}\n\n\n\n/* MASTER CONTAINER */\n.master-container {\n    /* left margin offsets sidebar, with a 10px gap; right margin to match gap */\n    margin-left: 240px;\n    margin-right: 10px;\n    margin-top: 97px;\n    margin-bottom: 20px;\n}\n\n/* CARD GRID */\n.card-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(250px, 350px));\n    gap: 20px;\n}\n\n/* CARD CONTAINER */\n.task-card {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n/* CARD BUTTONS */\n.card-buttons {\n    display: flex;\n    justify-content: space-between;\n}\n\n.card-buttons img {\n    height: 25px;\n    width: 25px;\n\n    /* below disables image from being clicked on inside the button */\n    pointer-events: none;\n}\n\n.card-buttons button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 5px;\n    width: 110px;\n    border: none;\n    background-color: #bfdbfe;\n}\n\n.card-buttons button:hover{\n    background-color: #dbeafe;\n    box-shadow: inset -2px -2px 2px 0px #000000;\n    cursor: pointer;\n}\n\n.card-buttons button:active{\n    background-color: #bfdbfe;\n    box-shadow: none;\n}\n\n\n/* INDIVIDUAL TASK/NOTE */\n\n.task {\n    display: grid;\n    grid-template: auto 25px 25px 1fr / 1fr;\n    height: 280px;\n    border: none;\n    background-color: #bfdbfe;\n    font-family: Arial, Helvetica, sans-serif;\n    overflow-wrap: anywhere;\n}\n\n.task h3, h6 {\n    margin: 0;\n    align-self: center;\n    justify-self: start;\n}\n\n.task h3 {\n    font-size: 1.6em;\n    padding: 10px;\n}\n\n.task h6 {\n    font-size: 1em;\n    padding: 10px;\n}\n\n.task p {\n    padding: 10px 20px 10px;\n    margin: 0;\n}\n\n/* Styling for completed note */\n.completedNote {\n    background-color: #d9f99d !important;\n    /* or #a7f3d0, or #bbf7d0 */\n}\n\n.completedNote+.card-buttons button {\n    background-color: #d9f99d !important;\n}\n\n.importantNote {\n    background-color: #fecaca;\n}\n\n.importantNote+.card-buttons button {\n    background-color: #fecaca;\n}\n\n/* hidden template task note, for cloning */\n\n.wrapper {\n    display: none;\n}\n\n/* NEW TASK DIALOG BOX */\n\n::backdrop {\n    background-color: rgba(255, 255, 255, 0.836);\n}\n\n.newTaskDialog, .editTaskDialog {\n    height: 540px;\n    width: 515px;\n    min-width: 200px;\n    padding: 20px 20px 0 20px;\n    border-radius: 10px;\n    border: 2px solid #1e3a8a;\n    -webkit-box-shadow: 0px 0px 10px 3px #000000;\n    -moz-box-shadow: 0px 0px 10px 3px #000000;\n    box-shadow: 0px 0px 10px 3px #000000;\n    background-color: #dbeafe;\n}\n\n.newTaskDialogFieldset, .editTaskDialogFieldset {\n    height: 450px;\n    display: flex;\n    flex-direction: column;\n    font-family: 'ComingSoon';\n    background-color: #eff6ff;\n}\n\n.formInput {\n    color: #6d28d9;\n    font-weight: 600;\n    font-size: 1.3em;\n    margin-top: 20px;\n    margin-bottom: 5px;\n}\n\n.titleInput {\n    margin: 0 0 5px 0;\n}\n\n#taskTitle, #editTitle {\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 1.1em;\n}\n\n#taskImportance, #editImportance {\n    width: 115px;\n    font-size: 1em;\n}\n\n#taskText, #editText {\n    height: 100%;\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 1em;\n}\n\n.formButtons {\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n    margin: 10px 0;\n}\n\n.hidden {\n    display: none !important;\n}\n\n.formCancel, .formConfirm, .saveEditBtn {\n    cursor: pointer;\n    font-size: 1.4em;\n    height: 50px;\n    width: 100px;\n    border-radius: 10px;\n}\n\n.formCancel, .formConfirm, .saveEditBtn {\n    height: 50px;\n    justify-content: center;\n    gap: 20px;\n    outline: 0;\n    align-items: center;\n    background-color: #eff6ff;\n    border: 1px solid #000;\n    border-radius: 4px;\n    cursor: pointer;\n    display: inline-flex;\n    flex-shrink: 0;\n    font-size: 20px;\n    line-height: 1.5;\n    overflow: hidden;\n    padding: 12px 16px;\n    text-decoration: none;\n    transition: all .14s ease-out;\n    white-space: nowrap;\n    width: 120px;\n    align-self: center;\n}\n\n.formCancel:active, .formConfirm:active, .saveEditBtn:active {\n    transform: translate(3px,3px);\n}\n\n\n.formConfirm:hover, .saveEditBtn:hover {\n    background-color: rgba(30, 255, 0, 0.2);\n    box-shadow: 4px 4px 0 #000;\n    transform: translate(-3px,-3px);\n}\n\n.formCancel:hover {\n    background-color: rgba(255, 0, 0, 0.200);\n    box-shadow: 4px 4px 0 #000;\n    transform: translate(-3px,-3px);\n}\n\n.formConfirm:focus-visible, .formCancel:focus-visible, .saveEditBtn:focus-visible{\n    outline-offset: 1px;\n}`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://todo-list/./src/style.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack://todo-list/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/getUrl.js":
/*!********************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/getUrl.js ***!
  \********************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n  url = String(url.__esModule ? url.default : url);\n\n  // If url is already wrapped in quotes, remove them\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n  if (options.hash) {\n    url += options.hash;\n  }\n\n  // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n  return url;\n};\n\n//# sourceURL=webpack://todo-list/./node_modules/css-loader/dist/runtime/getUrl.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://todo-list/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./src/style.css":
/*!***********************!*\
  !*** ./src/style.css ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./style.css */ \"./node_modules/css-loader/dist/cjs.js!./src/style.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://todo-list/./src/style.css?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://todo-list/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://todo-list/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://todo-list/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://todo-list/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://todo-list/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://todo-list/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./src/btnClickFn.js":
/*!***************************!*\
  !*** ./src/btnClickFn.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   filterCompletedTasks: () => (/* binding */ filterCompletedTasks),\n/* harmony export */   filterCurrentTasks: () => (/* binding */ filterCurrentTasks),\n/* harmony export */   filterFutureTasks: () => (/* binding */ filterFutureTasks),\n/* harmony export */   filterImportantTasks: () => (/* binding */ filterImportantTasks),\n/* harmony export */   oldTitle: () => (/* binding */ oldTitle),\n/* harmony export */   startNewTask: () => (/* binding */ startNewTask),\n/* harmony export */   submitNewTask: () => (/* binding */ submitNewTask),\n/* harmony export */   taskBtnClick: () => (/* binding */ taskBtnClick),\n/* harmony export */   updateTask: () => (/* binding */ updateTask)\n/* harmony export */ });\n/* harmony import */ var _markComplete_svg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./markComplete.svg */ \"./src/markComplete.svg\");\n/* harmony import */ var _newNote__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./newNote */ \"./src/newNote.js\");\n\n\n\n\nlet oldTitle;\nlet oldImportance;\nlet oldDueDate;\nlet oldDescription;\n\n\n// runs when user clicks \"New Task\";\nfunction startNewTask() {\n    let newTaskDialog = document.querySelector('.newTaskDialog');    \n    const newTaskForm = document.querySelector('.newTaskForm');\n    newTaskForm.reset();\n    newTaskDialog.showModal();\n};\n\n// runs when user clicks 'Confirm', when finished creating new task;\nfunction submitNewTask(e) {\n    e.preventDefault();\n    let title = document.getElementById('taskTitle').value;\n    \n    // ensures title is only letters and spaces, no blanks; shows custom validation if fails and returns\n    let titleCheck = /^(?=.*[^\\s])[a-zA-Z\\s]*$/.test(title); \n    if (!titleCheck) {\n        const titleInput = document.getElementById('taskTitle');\n        titleInput.setCustomValidity(\"Only letters and spaces please, min 1 character\");\n        titleInput.reportValidity();\n        return;\n    }\n\n    let importance = document.getElementById('taskImportance').value; \n    let dueDate = document.getElementById('taskDueDate').value; \n    let description = document.getElementById('taskText').value;\n    let completed = \"no\";\n    // run class function to create new note with constructor from newNote\n    const newNote = new _newNote__WEBPACK_IMPORTED_MODULE_1__.NewNote();\n    newNote.createNewNote(title, importance, dueDate, description, completed);\n};\n\n// runs when user clicks 'Complete', 'Delete', or 'Edit' on their task\n// listener is applied in index.js file ( watches for the button that is 'clicked' inside card-grid)\n\nfunction taskBtnClick(e) {\n    const target = e.target;\n    const card = target.closest('.task-card');\n\n\n    if (target.classList.contains('complete-task')){\n        if (target.textContent === \"Complete\"){\n            markComplete(card);\n        } else if (target.textContent === \"Incomplete\"){\n            markIncomplete(card);\n        }\n    } else if (target.classList.contains('edit-task')) {\n        // adds new class that is the old title (minus spaces), to the '.task' card div\n        // we'll need this later to select that classes fields that we want to update with the user edits\n        const oldTitleClass = card.querySelector('.task-title').textContent;\n        const titleWithoutSpaces = oldTitleClass.replace(/\\s/g, '');\n        card.childNodes[0].classList.add(titleWithoutSpaces);\n\n        openEditDialog(card);\n\n    } else if (target.classList.contains('delete-task')) {\n        let noteClicked = card.querySelector('.task-title').textContent;\n        card.remove(); // delete card from the page\n        // use removeNote function (further below) to delete object/card from array\n        removeNote(noteClicked);\n\n    } else {\n        return;\n    }\n\n    function markComplete(card){\n        card.querySelector('.task').classList.add('completedNote');\n        const completeBtn = card.querySelector('.complete-task');\n        completeBtn.textContent = 'Incomplete';\n        const completeBtnIcon = new Image();\n        completeBtnIcon.src = _markComplete_svg__WEBPACK_IMPORTED_MODULE_0__;\n        completeBtnIcon.setAttribute(\"alt\", \"mark complete button icon\");\n        completeBtn.appendChild(completeBtnIcon);\n        \n        const newNote = new _newNote__WEBPACK_IMPORTED_MODULE_1__.NewNote();\n        const noteArray = newNote.myNotes;\n        let noteClicked = card.querySelector('.task-title').textContent;\n        const noteToComplete = noteArray.findIndex(note => note.title === noteClicked);\n        noteArray[noteToComplete].completed = \"yes\";\n        console.log(noteArray);\n        localStorage.setItem('myNotes', JSON.stringify(noteArray));\n    };\n\n    \n    function markIncomplete(card){\n        card.querySelector('.task').classList.remove('completedNote');\n        const completeBtn = card.querySelector('.complete-task');\n        completeBtn.textContent = 'Complete';\n        const completeBtnIcon = new Image();\n        completeBtnIcon.src = _markComplete_svg__WEBPACK_IMPORTED_MODULE_0__;\n        completeBtnIcon.setAttribute(\"alt\", \"mark complete button icon\");\n        completeBtn.appendChild(completeBtnIcon);\n\n        const newNote = new _newNote__WEBPACK_IMPORTED_MODULE_1__.NewNote();\n        const noteArray = newNote.myNotes;\n        let noteClicked = card.querySelector('.task-title').textContent;\n        const noteToIncomplete = noteArray.findIndex(note => note.title === noteClicked);\n        noteArray[noteToIncomplete].completed = \"no\";\n        console.log(noteArray);\n        localStorage.setItem('myNotes', JSON.stringify(noteArray));\n    }\n\n    function openEditDialog(card) {\n        const editTaskDialog = document.querySelector('.editTaskDialog');\n            \n        // below is the \"old note\" info we need to populate the dialog and use to change the array\n        const title = card.querySelector('.task-title').textContent;\n        const priority = card.querySelector('.task-priority').textContent.replace('Importance: ', '');\n        const date = card.querySelector('.task-date').textContent.replace('Due: ', '');\n        const text = card.querySelector('.task-para').textContent;\n        oldTitle = title;\n        oldImportance = priority;\n        oldDueDate = date;\n        oldDescription = text;\n        \n        document.getElementById('editTitle').value = title;\n        document.getElementById('editImportance').value = priority;\n        document.getElementById('editDueDate').value = date;\n        document.getElementById('editText').value = text;\n        editTaskDialog.showModal();\n    }\n};\n\n\nfunction removeNote(noteClicked){\n    const newNote = new _newNote__WEBPACK_IMPORTED_MODULE_1__.NewNote();\n    const noteArray = newNote.myNotes;\n    const noteToDelete = noteArray.findIndex(note => note.title === noteClicked);\n    if(noteToDelete !== -1){\n        noteArray.splice(noteToDelete, 1);\n        console.log(noteArray);\n        localStorage.setItem('myNotes', JSON.stringify(noteArray));\n    };\n};\n\n\n//runs when user clicks the 'Save' button to save their edits\nfunction updateTask(e, oldTitle) {\n    e.preventDefault();\n    let title = document.getElementById('editTitle').value; \n\n    // ensures title is only letters and spaces, no blanks; shows custom validation if fails and returns\n    let titleCheck = /^(?=.*[^\\s])[a-zA-Z\\s]*$/.test(title);\n    if (!titleCheck) {\n        const titleInput = document.getElementById('editTitle');\n        titleInput.setCustomValidity(\"Only letters and spaces please, min 1 character\");\n        titleInput.reportValidity();\n        return;\n    }\n\n    let importance = document.getElementById('editImportance').value; \n    let dueDate = document.getElementById('editDueDate').value; \n    let description = document.getElementById('editText').value;\n\n    const newNote = new _newNote__WEBPACK_IMPORTED_MODULE_1__.NewNote();\n    newNote.editNote(oldTitle, title, importance, dueDate, description);\n}\n\n\nfunction filterCurrentTasks(){\n    const allTasks = document.querySelectorAll('.task-card');\n    allTasks.forEach((taskCard) => {\n        if (taskCard.firstChild.classList.contains('completedNote')){\n            taskCard.classList.add('hidden');\n        } else if (taskCard.classList.contains('hidden') && !taskCard.firstChild.classList.contains('completedNote')){\n            taskCard.classList.remove('hidden');\n        }\n    });\n};\n\nfunction filterImportantTasks(){\n    const allTasks = document.querySelectorAll('.task-card');\n    allTasks.forEach((taskCard) => {\n        // if important and completed, add hidden\n        // if important and not completed and hidden, remove hidden\n        // if not important, add hidden\n    if (taskCard.firstChild.classList.contains('importantNote') \n            && taskCard.firstChild.classList.contains('completedNote') \n            && !taskCard.classList.contains('hidden')){\n        taskCard.classList.add('hidden');\n\n    } else if (taskCard.firstChild.classList.contains('importantNote') \n            && !taskCard.firstChild.classList.contains('completedNote')\n            && taskCard.classList.contains('hidden')){\n        taskCard.classList.remove('hidden');\n\n    } else if (!taskCard.firstChild.classList.contains('importantNote')){\n        taskCard.classList.add('hidden');\n\n    } else {\n        return;\n    }\n    });\n}\n\nfunction filterFutureTasks(){\n    const allTasks = document.querySelectorAll('.task-card');\n    allTasks.forEach((taskCard) => {\n        const DATEINPUT = document.querySelectorAll('.task-date');\n        DATEINPUT.forEach((date) => {\n            if (date !== \"\"){\n                const todaysDate = new Date();\n                const month = todaysDate.getUTCMonth() + 1; // months from 1-12, JS starts at '0' so have to add +1\n                const day = todaysDate.getUTCDate();\n                const year = todaysDate.getUTCFullYear();\n                    \n                // Using padded values and a '-'; now 2024/1/1 becomes 2024-01-01\n                const paddedMonth = month.toString().padStart(2,\"0\");\n                const paddedDay = day.toString().padStart(2,\"0\");\n                const currentDate = `${year}-${paddedMonth}-${paddedDay}`;\n                let userDate = taskCard.firstChild.childNodes[2].textContent.replace('Due: ', '');\n                \n                calcDateDifference(userDate, currentDate, taskCard);\n            } else {\n                return;\n            }\n        });\n    });\n};\n\nfunction calcDateDifference(userDate, currentDate, taskCard) {\n    let startDate = currentDate;\n    let endDate = userDate;\n\n    let differenceInTime = new Date(endDate).getTime() - new Date(startDate).getTime();\n    let differenceInDays = differenceInTime / (1000 * 3600 * 24) + 1;\n    if (userDate === \"\"){\n        taskCard.classList.add('hidden');\n    } else if (taskCard.firstChild.classList.contains('completedNote')){\n        taskCard.classList.add('hidden');\n    } else if (differenceInDays < 7){\n        taskCard.classList.add('hidden');\n    } else if (differenceInDays >= 7 && taskCard.classList.contains('hidden')){\n        taskCard.classList.remove('hidden');\n    } else {\n        return;\n    }\n};\n\nfunction filterCompletedTasks(){\n    const allTasks = document.querySelectorAll('.task-card');\n    allTasks.forEach((taskCard) => {\n        if (taskCard.firstChild.classList.contains('completedNote') \n            && taskCard.classList.contains('hidden')){\n            taskCard.classList.remove('hidden');\n        } else if (!taskCard.firstChild.classList.contains('completedNote')){\n            taskCard.classList.add('hidden');\n        } else {\n            return;\n        }\n    });\n};\n\n//# sourceURL=webpack://todo-list/./src/btnClickFn.js?");

/***/ }),

/***/ "./src/createCard.js":
/*!***************************!*\
  !*** ./src/createCard.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCard: () => (/* binding */ createCard),\n/* harmony export */   createDomElements: () => (/* binding */ createDomElements)\n/* harmony export */ });\n/* harmony import */ var _markComplete_svg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./markComplete.svg */ \"./src/markComplete.svg\");\n/* harmony import */ var _deleteTask_svg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./deleteTask.svg */ \"./src/deleteTask.svg\");\n/* harmony import */ var _editTask_svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./editTask.svg */ \"./src/editTask.svg\");\n// creates template card that we hide using the 'wrapper' class; used for cloning in newNote.js\n\n\n\n\n\n// import { NewNote } from './newNote';\n\nfunction createCard() {\n    // create cardGrid to hold cards\n    const cardGrid = document.querySelector('.card-grid');\n    // create div with 'wrapper' class, this is the only elem that receives this class\n    const cardTemplateWrapper = document.createElement('div');\n    cardTemplateWrapper.classList.add('wrapper');\n\n\n    const taskCard = document.createElement('div');\n    taskCard.classList.add('task-card');\n\n    const task = document.createElement('div');\n    task.classList.add('task');\n\n    const taskTitleH3 = document.createElement('h3');\n    taskTitleH3.classList.add('task-title');\n    \n    const taskImportanceH6 = document.createElement('h6');\n    taskImportanceH6.classList.add('task-priority');\n     \n    const taskDueDateH6 = document.createElement('h6');\n    taskDueDateH6.classList.add('task-date');\n    \n    const taskText = document.createElement('p');\n    taskText.classList.add('task-para');\n\n    cardGrid.appendChild(cardTemplateWrapper);\n    cardTemplateWrapper.appendChild(taskCard);\n    taskCard.appendChild(task);\n    task.appendChild(taskTitleH3);\n    task.appendChild(taskImportanceH6);\n    task.appendChild(taskDueDateH6);\n    task.appendChild(taskText);\n\n    const cardButtons = document.createElement('div');\n    cardButtons.classList.add('card-buttons');\n    taskCard.appendChild(cardButtons);\n\n    const completeBtn = document.createElement('button');\n    completeBtn.textContent = \"Complete\";\n    completeBtn.classList.add('complete-task');\n    const completeBtnIcon = new Image();\n    completeBtnIcon.src = _markComplete_svg__WEBPACK_IMPORTED_MODULE_0__;\n    completeBtnIcon.setAttribute(\"alt\", \"mark complete button icon\");\n    completeBtn.appendChild(completeBtnIcon);\n    \n    \n    const deleteBtn = document.createElement('button');\n    deleteBtn.textContent = \"Delete\";\n    deleteBtn.classList.add('delete-task');\n    const deleteBtnIcon = new Image();\n    deleteBtnIcon.src = _deleteTask_svg__WEBPACK_IMPORTED_MODULE_1__;\n    deleteBtnIcon.setAttribute(\"alt\", \"delete button icon\");\n    deleteBtn.appendChild(deleteBtnIcon);\n    \n    \n    const editBtn = document.createElement('button');\n    editBtn.textContent = \"Edit\";\n    editBtn.classList.add('edit-task');\n    const editBtnIcon = new Image();\n    editBtnIcon.src = _editTask_svg__WEBPACK_IMPORTED_MODULE_2__;\n    editBtnIcon.setAttribute(\"alt\", \"edit button icon\");\n    editBtn.appendChild(editBtnIcon);\n    \n\n    cardButtons.appendChild(completeBtn);\n    cardButtons.appendChild(deleteBtn);\n    cardButtons.appendChild(editBtn);\n};\n\n\n// creates cards for items saved in localStorage\nfunction createDomElements(notes){\n    notes.forEach(note => {\n        const cardGrid = document.querySelector('.card-grid');\n        const taskCard = document.createElement('div');\n        taskCard.classList.add('task-card');\n        \n        const task = document.createElement('div');\n        task.classList.add('task');\n\n        const taskElements = [\n            { \n                type: \"h3\",\n                class: \"task-title\",\n                text: note.title\n            },\n            { \n                type: \"h6\",\n                class: \"task-priority\",\n                text: \"Importance: \" + note.importance,\n            },\n            { \n                type: \"h6\",\n                class: \"task-date\",\n                text: \"Due: \" + note.dueDate,\n            },\n            {\n                type: \"p\",\n                class: \"task-para\",\n                text: note.description,\n            },\n        ];\n\n        taskElements.forEach((element) => {\n            const el = document.createElement(element.type);\n            if (note.importance === \"Important\") {\n                task.classList.add('importantNote');\n            }\n            if (note.completed === \"yes\") {\n                task.classList.add('completedNote');\n            }\n            el.classList.add(element.class);\n            el.textContent = element.text;\n            task.appendChild(el);\n        });\n\n        const taskCardBtns = document.createElement('div');\n        taskCardBtns.classList.add('card-buttons');\n\n        const buttons = [\n            { \n                btnName: \"Complete\",\n                class: \"complete-task\",\n                imgSrc: _markComplete_svg__WEBPACK_IMPORTED_MODULE_0__\n            },\n            { \n                btnName: \"Delete\",\n                class: \"delete-task\",\n                imgSrc: _deleteTask_svg__WEBPACK_IMPORTED_MODULE_1__\n            },\n            { \n                btnName: \"Edit\",\n                class: \"edit-task\",\n                imgSrc: _editTask_svg__WEBPACK_IMPORTED_MODULE_2__\n            },\n        ];\n\n        buttons.forEach(item => {\n            const btn = document.createElement('button');\n            btn.textContent = item.btnName;\n            btn.classList.add(item.class);\n            if (item.btnName === \"Complete\" && note.completed === \"yes\") {\n                btn.textContent = \"Incomplete\";\n                taskCard.classList.add('hidden');\n            }\n\n            const btnIcon = new Image();\n            btnIcon.src = item.imgSrc;\n            btnIcon.setAttribute(\"alt\", item.btnName + \" note icon\");\n\n            btn.appendChild(btnIcon);\n            taskCardBtns.appendChild(btn);\n        })\n\n        taskCard.appendChild(task);\n        taskCard.appendChild(taskCardBtns);\n        cardGrid.appendChild(taskCard);\n    })\n}\n\n//# sourceURL=webpack://todo-list/./src/createCard.js?");

/***/ }),

/***/ "./src/createDialogs.js":
/*!******************************!*\
  !*** ./src/createDialogs.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createEditTaskDialog: () => (/* binding */ createEditTaskDialog),\n/* harmony export */   createNewTaskDialog: () => (/* binding */ createNewTaskDialog)\n/* harmony export */ });\n/* harmony import */ var _btnClickFn__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./btnClickFn */ \"./src/btnClickFn.js\");\n\n\n\n\nconst BODY = document.querySelector('body');\n\nfunction createNewTaskDialog() {\n    // add newTaskDialog to body\n    const newTaskDialog = document.createElement('dialog');\n    newTaskDialog.classList.add('newTaskDialog');\n    BODY.appendChild(newTaskDialog);\n    \n    // add form to dialog; wrapped in a fieldset\n    const NEWTASKFORM = document.createElement('form');\n    NEWTASKFORM.classList.add('newTaskForm');\n    newTaskDialog.appendChild(NEWTASKFORM);  \n    const formFieldset = document.createElement('fieldset');\n    formFieldset.classList.add('newTaskDialogFieldset');\n    NEWTASKFORM.appendChild(formFieldset);\n\n    // create taskTitle label with input; append to formFieldset\n    const taskTitleLabel = document.createElement('label');\n    taskTitleLabel.textContent = \"Task Title:\"\n    taskTitleLabel.htmlFor = \"taskTitle\";\n    taskTitleLabel.classList.add('formInput', 'titleInput');\n    \n    const taskTitleInput = document.createElement('input');\n    taskTitleInput.id = \"taskTitle\";\n    taskTitleInput.type = \"text\";\n    taskTitleInput.name = \"task-title\";\n    taskTitleInput.minLength = \"1\";\n    taskTitleInput.maxLength = \"60\";\n    taskTitleInput.autocomplete = \"off\";\n    taskTitleInput.required = true;\n\n    formFieldset.appendChild(taskTitleLabel);\n    formFieldset.appendChild(taskTitleInput);\n\n    // create taskImportance label with <select> && 2 options; append to formFieldset\n    const taskImportanceLabel = document.createElement('label');\n    taskImportanceLabel.textContent = \"Importance Level:\";\n    taskImportanceLabel.htmlFor = \"taskImportance\";\n    taskImportanceLabel.classList.add('formInput', 'importanceInput');\n\n    const taskImportanceSelect = document.createElement('select');\n    taskImportanceSelect.id = \"taskImportance\";\n\n    const importanceOption1 = document.createElement('option');\n    const importanceOption2 = document.createElement('option');\n    importanceOption1.setAttribute(\"value\", \"Normal\");\n    importanceOption2.setAttribute(\"value\", \"Important\");\n    importanceOption1.textContent = \"Normal\";\n    importanceOption2.textContent = \"Important\";\n\n    formFieldset.appendChild(taskImportanceLabel);\n    formFieldset.appendChild(taskImportanceSelect);\n    taskImportanceSelect.appendChild(importanceOption1);\n    taskImportanceSelect.appendChild(importanceOption2);\n\n    // create taskDueDate label with date selector; append to formFieldset\n    const taskDueDateLabel = document.createElement('label');\n    taskDueDateLabel.textContent = \"Due Date:\";\n    taskDueDateLabel.htmlFor = \"taskDueDate\";\n    taskDueDateLabel.classList.add('formInput', 'dueDateInput');\n\n    const dateInputContainer = document.createElement('div');\n    dateInputContainer.classList.add('dateInputContainer');\n\n    const dateInputSelector = document.createElement('input');\n    dateInputSelector.id = \"taskDueDate\";\n    dateInputSelector.type = \"date\";\n    dateInputSelector.min = \"2024-03-01\";\n    dateInputSelector.max = \"2034-03-01\";\n    dateInputSelector.onkeydown = ((e) => {\n            return false;\n        });\n\n    dateInputContainer.appendChild(dateInputSelector);\n    formFieldset.appendChild(taskDueDateLabel);\n    formFieldset.appendChild(dateInputContainer);\n\n    // create tastText label with a <textarea> field; append to formFieldset\n    const taskTextLabel = document.createElement('label');\n    taskTextLabel.textContent = \"Note:\";\n    taskTextLabel.htmlFor = \"taskText\";\n    taskTextLabel.classList.add('formInput', 'taskInput');\n\n    const taskTextArea = document.createElement('textarea');\n    taskTextArea.id = \"taskText\";\n    taskTextArea.name = \"task-text\";\n    taskTextArea.cols = \"50\";\n    taskTextArea.rows = \"1\";\n       \n    formFieldset.appendChild(taskTextLabel);\n    formFieldset.appendChild(taskTextArea);\n\n    // create Cancel/Confirm btns; append to FORM (after all labels/inputs)\n    const formButtons = document.createElement('div');\n    formButtons.classList.add('formButtons');\n    NEWTASKFORM.appendChild(formButtons);\n\n    const cancelButton = document.createElement('button');\n    cancelButton.textContent = \"Cancel\";\n    cancelButton.setAttribute(\"value\", \"cancel\");\n    cancelButton.formMethod = \"dialog\";\n    cancelButton.classList.add('formCancel');\n    cancelButton.formNoValidate = true; // add to let 'cancel' just close the dialog, ignores our validation check\n\n    const confirmButton = document.createElement('button');\n    confirmButton.textContent = \"Confirm\";\n    confirmButton.setAttribute(\"value\", \"confirm\");\n    confirmButton.classList.add('formConfirm');\n\n    formButtons.appendChild(cancelButton);\n    formButtons.appendChild(confirmButton);\n\n    // add listener to confirm btn; call on fnc in btnClickFn.js when clicked\n    const formConfirm = document.querySelector('.formConfirm');\n    formConfirm.addEventListener('click', (e) => {\n        (0,_btnClickFn__WEBPACK_IMPORTED_MODULE_0__.submitNewTask)(e);\n    });\n};\n\n// manually creating editTaskDialog; needed new ID's for the field inputs/labels\n// adds a listener to the 'save' button at the end\nfunction createEditTaskDialog() {\n    // add newTaskDialog to body\n    const editTaskDialog = document.createElement('dialog');\n    editTaskDialog.classList.add('editTaskDialog');\n    BODY.appendChild(editTaskDialog);\n    \n    // add form to dialog; wrapped in a fieldset\n    const editTaskForm = document.createElement('form');\n    editTaskForm.classList.add('newTaskForm');\n    editTaskDialog.appendChild(editTaskForm);  \n    const formFieldset = document.createElement('fieldset');\n    formFieldset.classList.add('editTaskDialogFieldset');\n    editTaskForm.appendChild(formFieldset);\n\n    // create taskTitle label with input; append to formFieldset\n    const taskTitleLabel = document.createElement('label');\n    taskTitleLabel.textContent = \"Task Title:\"\n    taskTitleLabel.htmlFor = \"editTitle\";\n    taskTitleLabel.classList.add('formInput', 'titleInput');\n    \n    const taskTitleInput = document.createElement('input');\n    taskTitleInput.id = \"editTitle\";\n    taskTitleInput.type = \"text\";\n    taskTitleInput.name = \"edit-title\";\n    taskTitleInput.minLength = \"2\";\n    taskTitleInput.maxLength = \"60\";\n    taskTitleInput.autocomplete = \"off\";\n\n    formFieldset.appendChild(taskTitleLabel);\n    formFieldset.appendChild(taskTitleInput);\n\n    // create taskImportance label with <select> && 2 options; append to formFieldset\n    const taskImportanceLabel = document.createElement('label');\n    taskImportanceLabel.textContent = \"Importance Level:\";\n    taskImportanceLabel.htmlFor = \"editImportance\";\n    taskImportanceLabel.classList.add('formInput', 'importanceInput');\n\n    const taskImportanceSelect = document.createElement('select');\n    taskImportanceSelect.id = \"editImportance\";\n\n    const importanceOption1 = document.createElement('option');\n    const importanceOption2 = document.createElement('option');\n    importanceOption1.setAttribute(\"value\", \"Normal\");\n    importanceOption2.setAttribute(\"value\", \"Important\");\n    importanceOption1.textContent = \"Normal\";\n    importanceOption2.textContent = \"Important\";\n\n    formFieldset.appendChild(taskImportanceLabel);\n    formFieldset.appendChild(taskImportanceSelect);\n    taskImportanceSelect.appendChild(importanceOption1);\n    taskImportanceSelect.appendChild(importanceOption2);\n\n    // create taskDueDate label with date selector; append to formFieldset\n    const taskDueDateLabel = document.createElement('label');\n    taskDueDateLabel.textContent = \"Due Date:\";\n    taskDueDateLabel.htmlFor = \"editDueDate\";\n    taskDueDateLabel.classList.add('formInput', 'dueDateInput');\n\n    const dateInputContainer = document.createElement('div');\n    dateInputContainer.classList.add('dateInputContainer');\n\n    const dateInputSelector = document.createElement('input');\n    dateInputSelector.id = \"editDueDate\";\n    dateInputSelector.type = \"date\";\n    dateInputSelector.min = \"2024-03-01\";\n    dateInputSelector.max = \"2034-03-01\";\n    dateInputSelector.onkeydown = ((e) => {\n            return false;\n        });\n\n    dateInputContainer.appendChild(dateInputSelector);\n    formFieldset.appendChild(taskDueDateLabel);\n    formFieldset.appendChild(dateInputContainer);\n\n    // create tastText label with a <textarea> field; append to formFieldset\n    const taskTextLabel = document.createElement('label');\n    taskTextLabel.textContent = \"Note:\";\n    taskTextLabel.htmlFor = \"editText\";\n    taskTextLabel.classList.add('formInput', 'taskInput');\n\n    const taskTextArea = document.createElement('textarea');\n    taskTextArea.id = \"editText\";\n    taskTextArea.name = \"edit-text\";\n    taskTextArea.cols = \"50\";\n    taskTextArea.rows = \"1\";\n       \n    formFieldset.appendChild(taskTextLabel);\n    formFieldset.appendChild(taskTextArea);\n\n    // create Cancel/Confirm btns; append to FORM (after all labels/inputs)\n    const formButtons = document.createElement('div');\n    formButtons.classList.add('formButtons');\n    editTaskForm.appendChild(formButtons);\n\n    const cancelButton = document.createElement('button');\n    cancelButton.textContent = \"Cancel\";\n    cancelButton.setAttribute(\"value\", \"cancel\");\n    cancelButton.formMethod = \"dialog\";\n    cancelButton.classList.add('formCancel');\n    cancelButton.formNoValidate = true;  // add to let 'cancel' just close the dialog, ignores our validation check\n\n    const saveEditButton = document.createElement('button');\n    saveEditButton.textContent = \"Save\";\n    saveEditButton.setAttribute(\"value\", \"save\");\n    saveEditButton.classList.add('saveEditBtn');\n\n    formButtons.appendChild(cancelButton);\n    formButtons.appendChild(saveEditButton);\n    \n    // add listener to save btn; call on fnc in btnClickFn.js when clicked\n    const editConfirm = document.querySelector('.saveEditBtn');\n    editConfirm.addEventListener('click', (e) => {\n        (0,_btnClickFn__WEBPACK_IMPORTED_MODULE_0__.updateTask)(e, _btnClickFn__WEBPACK_IMPORTED_MODULE_0__.oldTitle);\n    });\n};\n\n//# sourceURL=webpack://todo-list/./src/createDialogs.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _style_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./style.css */ \"./src/style.css\");\n/* harmony import */ var _currentTask_svg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./currentTask.svg */ \"./src/currentTask.svg\");\n/* harmony import */ var _importantTask_svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./importantTask.svg */ \"./src/importantTask.svg\");\n/* harmony import */ var _futureTask_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./futureTask.svg */ \"./src/futureTask.svg\");\n/* harmony import */ var _completedTask_svg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./completedTask.svg */ \"./src/completedTask.svg\");\n/* harmony import */ var _newTask_svg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./newTask.svg */ \"./src/newTask.svg\");\n/* harmony import */ var _createCard__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./createCard */ \"./src/createCard.js\");\n/* harmony import */ var _btnClickFn__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./btnClickFn */ \"./src/btnClickFn.js\");\n/* harmony import */ var _createDialogs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./createDialogs */ \"./src/createDialogs.js\");\n/* harmony import */ var _newNote__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./newNote */ \"./src/newNote.js\");\n\n\n\n\n\n\n\n\n\n\n\n// below creates sidebar and appends to body; also adds hidden task note template\n(function(){\n    const BODY = document.querySelector('body');\n    const sidebar = document.createElement('div');\n    sidebar.classList.add('sidebar-container');\n    BODY.appendChild(sidebar);\n\n    const sidebarH1 = document.createElement('h1');\n    sidebarH1.classList.add('sidebar-header');\n    sidebarH1.textContent = \"To-Do list\";\n    sidebar.appendChild(sidebarH1);\n\n    const sidebarList = document.createElement('ul');\n    sidebarList.classList.add('sidebar-list');\n\n    const sidebarListItems = [\n        {\n            title: \"currentTasks\",\n            text: \"Current Tasks\",\n            imgSrc: _currentTask_svg__WEBPACK_IMPORTED_MODULE_1__,\n        },\n        {\n            title: \"importantTasks\",\n            text: \"Important Tasks\",\n            imgSrc: _importantTask_svg__WEBPACK_IMPORTED_MODULE_2__,\n        },\n        {\n            title: \"futureTasks\",\n            text: \"Future Tasks (due date > 7d)\",\n            imgSrc: _futureTask_svg__WEBPACK_IMPORTED_MODULE_3__,\n        },\n        {\n            title: \"completedTasks\",\n            text: \"Completed Tasks\",\n            imgSrc: _completedTask_svg__WEBPACK_IMPORTED_MODULE_4__,\n        },\n        {\n            title: \"newTask\",\n            text: \"New Task\",\n            imgSrc: _newTask_svg__WEBPACK_IMPORTED_MODULE_5__,\n        },\n    ];\n\n    //creates button w/ icon for each object in the sidebarListItems array\n    sidebarListItems.forEach((item) => {\n        const newListItem = document.createElement('li');\n        const newListButton = document.createElement('button');\n        newListButton.classList.add(item.title);\n        newListItem.appendChild(newListButton);\n        \n        const buttonText = document.createElement('span');\n        buttonText.textContent = item.text;\n\n        const taskImage = new Image();\n        taskImage.src = item.imgSrc;\n        taskImage.classList.add('sidebar-svg');\n        taskImage.setAttribute(\"alt\", (item.text + \" icon\"));\n        \n        newListButton.appendChild(taskImage);\n        newListButton.appendChild(buttonText);\n        sidebarList.appendChild(newListItem);\n    });\n\n    sidebar.appendChild(sidebarList);\n\n    // adds 'selected' styling to Current Tasks\n    const currentTasks = document.querySelector('.currentTasks');\n    currentTasks.classList.add('sidebar-list-click');\n\n    // creates master container for positioning page with sidebar; cardGrid container for the card grid\n    const masterContainer = document.createElement('div');\n    masterContainer.classList.add('master-container');\n    const cardGrid = document.createElement('div');\n    cardGrid.classList.add('card-grid');\n    BODY.appendChild(masterContainer);\n    masterContainer.appendChild(cardGrid);\n\n    // create template card && card grid\n    (0,_createCard__WEBPACK_IMPORTED_MODULE_6__.createCard)();\n    addSidebarTaskFilterListeners();\n    addNewTaskBtnListener();\n    addTaskCardListener();\n    (0,_createDialogs__WEBPACK_IMPORTED_MODULE_8__.createNewTaskDialog)();\n    (0,_createDialogs__WEBPACK_IMPORTED_MODULE_8__.createEditTaskDialog)();\n    \n    const storageLoad = new _newNote__WEBPACK_IMPORTED_MODULE_9__.NewNote();\n    storageLoad.createDomElements();\n\n}());\n\n\n// add listener to New Task sidebar btn\nfunction addNewTaskBtnListener(){\n    const newTask = document.querySelector('.newTask');\n    newTask.addEventListener('click', () => {\n        (0,_btnClickFn__WEBPACK_IMPORTED_MODULE_7__.startNewTask)();\n    });\n}\n\n// add listener to card grid for the Complete/Delete/Edit btns\nfunction addTaskCardListener() {\n    const taskCard = document.querySelector('.card-grid');\n    taskCard.addEventListener('click', function(e) {\n        (0,_btnClickFn__WEBPACK_IMPORTED_MODULE_7__.taskBtnClick)(e);\n    });\n}\n\n// add listener to CurrentTasks, Imprtnt Tasks, Future Tasks && Compltd Tasks\nfunction addSidebarTaskFilterListeners() {\n    const sidebarTaskFilterBtns = document.querySelectorAll('button');\n    sidebarTaskFilterBtns.forEach((listItem) => {\n        listItem.addEventListener('click', (e) => {\n            const target = e.target;\n            // below removes 'click' style if another sidebar filter is clicked\n            sidebarTaskFilterBtns.forEach((button) => {\n                if (target === document.querySelector('.newTask')){\n                    return;\n                } else {\n                    button.classList.remove('sidebar-list-click');\n                }\n            })\n\n            // below applies the 'click'/'active' styling when clicked, and runs filter fnc\n            if (target === document.querySelector('.currentTasks')){\n                target.classList.add('sidebar-list-click');\n                (0,_btnClickFn__WEBPACK_IMPORTED_MODULE_7__.filterCurrentTasks)();\n            } else if (target === document.querySelector('.importantTasks')){\n                target.classList.add('sidebar-list-click');\n                (0,_btnClickFn__WEBPACK_IMPORTED_MODULE_7__.filterImportantTasks)();\n            } else if (target === document.querySelector('.futureTasks')){\n                target.classList.add('sidebar-list-click');\n                (0,_btnClickFn__WEBPACK_IMPORTED_MODULE_7__.filterFutureTasks)();\n            } else if (target === document.querySelector('.completedTasks')){\n                target.classList.add('sidebar-list-click');\n                (0,_btnClickFn__WEBPACK_IMPORTED_MODULE_7__.filterCompletedTasks)();\n            }\n        })\n    })\n}\n\n\n\n//# sourceURL=webpack://todo-list/./src/index.js?");

/***/ }),

/***/ "./src/newNote.js":
/*!************************!*\
  !*** ./src/newNote.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NewNote: () => (/* binding */ NewNote)\n/* harmony export */ });\n/* harmony import */ var _createCard__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createCard */ \"./src/createCard.js\");\n\n\nclass NewNote {\n\n    title;\n    importance;\n    dueDate;\n    description;\n    completed;\n    myNotes = [];\n\n    constructor(title, importance, dueDate, description, completed) {\n        this.title = title;\n        this.importance = importance;\n        this.dueDate = dueDate;\n        this.description = description;\n        this.completed = completed;\n        this.myNotes = [];\n\n        if (localStorage.getItem('myNotes')) {\n            this.myNotes = JSON.parse(localStorage.getItem('myNotes'));\n        };\n    };\n\n    createDomElements() {\n        (0,_createCard__WEBPACK_IMPORTED_MODULE_0__.createDomElements)(this.myNotes);\n    }\n\n    createNewNote(title, importance, dueDate, description, completed){\n        const newNote = new NewNote(title, importance, dueDate, description, completed);\n\n        if(this.myNotes.some(note => note.title === title)){\n            alert(\"This note title already exists!\");\n            return;\n        }\n\n        const newTaskDialog = document.querySelector('.newTaskDialog'); // grab dialog to close when finished\n        const wrapper = document.querySelector('.wrapper'); // contains \"hidden\" card we clone\n        const cardGrid = document.querySelector('.card-grid'); // cardGrid to append new cards\n\n        let task = document.querySelector('.task');\n        let newTitle = document.querySelector('.task-title');\n        let newImportance = document.querySelector('.task-priority');\n        let newDueDate = document.querySelector('.task-date');\n        let newDescription = document.querySelector('.task-para');\n        newTitle.textContent = title;\n        newImportance.textContent = \"Importance: \" + importance;\n        newDueDate.textContent = 'Due: ' + dueDate;\n        newDescription.textContent = description;\n\n        task.classList.remove('importantNote'); //need this otherwise it continuously adds the class regardless of selection\n        \n        if (importance === \"Important\"){\n            task.classList.add('importantNote'); //checks if \"important\" is selected and applies relevant class\n        };\n\n\n        // clones children in hidden wrapper to create new notes\n        let children = wrapper.childNodes;\n        children.forEach((item) => {\n            let newNoteContent = item.cloneNode(true);\n            cardGrid.appendChild(newNoteContent);\n        });\n\n        this.myNotes.push(newNote);\n        localStorage.setItem('myNotes', JSON.stringify(this.myNotes));\n        console.log(this.myNotes); // this spits out our array, so use this when you need to make the JSON export data saver thing *************************\n\n\n        newTaskDialog.close();\n    };\n\n    editNote(oldTitle, title, importance, dueDate, description){\n        if(this.myNotes.some(note => note.title === title) && oldTitle !== title){\n            alert(\"This note title already exists!\");\n            return;\n        }\n        const oldNote = this.myNotes.findIndex(note => note.title === oldTitle);\n        const editTaskDialog = document.querySelector('.editTaskDialog');\n        const target = document.querySelector('.' + oldTitle.replace(/\\s/g, ''));\n\n        // uses oldNote index# (from findIndex) and updates array info\n        this.myNotes[oldNote].title = title;\n        this.myNotes[oldNote].importance = importance;\n        this.myNotes[oldNote].dueDate = dueDate;\n        this.myNotes[oldNote].description = description;\n\n        let newTitle = target.querySelector('.task-title');\n        let newImportance = target.querySelector('.task-priority');\n        let newDueDate = target.querySelector('.task-date');\n        let newDescription = target.querySelector('.task-para');\n        newTitle.textContent = title;\n        newImportance.textContent = \"Importance: \" + importance;\n        newDueDate.textContent = 'Due: ' + dueDate;\n        newDescription.textContent = description;\n\n        importanceChangeCheck(importance, target);\n\n        console.log(this.myNotes); // this spits out our array, so use this when you need to make the JSON export data saver thing *******************************\n\n        // remove spaces and remove class with old title && replace with new title\n        target.classList.remove(oldTitle.replace(/\\s/g, ''));\n        const titleWithoutSpaces = title.replace(/\\s/g, '');\n        target.classList.add(titleWithoutSpaces);\n\n        localStorage.setItem('myNotes', JSON.stringify(this.myNotes));\n        editTaskDialog.close();\n    };\n};\n\nfunction importanceChangeCheck(importance, target) {\n    if (importance === \"Normal\") {\n        target.classList.remove('importantNote');\n    } else {\n        target.classList.add('importantNote');\n    }\n}\n\n//# sourceURL=webpack://todo-list/./src/newNote.js?");

/***/ }),

/***/ "./src/ComingSoon-Regular.ttf":
/*!************************************!*\
  !*** ./src/ComingSoon-Regular.ttf ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"b0a0957c7a974d3f4396.ttf\";\n\n//# sourceURL=webpack://todo-list/./src/ComingSoon-Regular.ttf?");

/***/ }),

/***/ "./src/completedTask.svg":
/*!*******************************!*\
  !*** ./src/completedTask.svg ***!
  \*******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"8b1b146037d084f19895.svg\";\n\n//# sourceURL=webpack://todo-list/./src/completedTask.svg?");

/***/ }),

/***/ "./src/currentTask.svg":
/*!*****************************!*\
  !*** ./src/currentTask.svg ***!
  \*****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"ad9e4abc7465fd3cbc14.svg\";\n\n//# sourceURL=webpack://todo-list/./src/currentTask.svg?");

/***/ }),

/***/ "./src/deleteTask.svg":
/*!****************************!*\
  !*** ./src/deleteTask.svg ***!
  \****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"336129cd9e2027727fd4.svg\";\n\n//# sourceURL=webpack://todo-list/./src/deleteTask.svg?");

/***/ }),

/***/ "./src/editTask.svg":
/*!**************************!*\
  !*** ./src/editTask.svg ***!
  \**************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"f4061fecaeac08774b91.svg\";\n\n//# sourceURL=webpack://todo-list/./src/editTask.svg?");

/***/ }),

/***/ "./src/futureTask.svg":
/*!****************************!*\
  !*** ./src/futureTask.svg ***!
  \****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"b2f7cd94e33e2e09e6a6.svg\";\n\n//# sourceURL=webpack://todo-list/./src/futureTask.svg?");

/***/ }),

/***/ "./src/importantTask.svg":
/*!*******************************!*\
  !*** ./src/importantTask.svg ***!
  \*******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"de426cc84e203941eab1.svg\";\n\n//# sourceURL=webpack://todo-list/./src/importantTask.svg?");

/***/ }),

/***/ "./src/markComplete.svg":
/*!******************************!*\
  !*** ./src/markComplete.svg ***!
  \******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"10605ca39607d79c8f65.svg\";\n\n//# sourceURL=webpack://todo-list/./src/markComplete.svg?");

/***/ }),

/***/ "./src/newTask.svg":
/*!*************************!*\
  !*** ./src/newTask.svg ***!
  \*************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"110dbe9ea01d8f6cdb30.svg\";\n\n//# sourceURL=webpack://todo-list/./src/newTask.svg?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src;
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) {
/******/ 					var i = scripts.length - 1;
/******/ 					while (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		__webpack_require__.b = document.baseURI || self.location.href;
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"main": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// no jsonp function
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;